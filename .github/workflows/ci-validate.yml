name: Snowflake CI Pipeline (Stage Deployment)

on:
  push:
    branches:
      - stage

jobs:
  deploy-to-stage:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE_STAGE }}   # Stage Database
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install schemachange
          pip install sqlfluff

      - name: Add SQLFluff config
        run: |
          echo "[sqlfluff]" > .sqlfluff
          echo "dialect = snowflake" >> .sqlfluff
          echo "exclude_rules = L010,L014,LT02" >> .sqlfluff

      - name: Lint SQL files
        run: |
          sqlfluff lint sql/

      - name: Create connections.toml
        run: |
          echo "[snowflake_connection]" > connections.toml
          echo "account = '${SNOWFLAKE_ACCOUNT}'" >> connections.toml
          echo "user = '${SNOWFLAKE_USER}'" >> connections.toml
          echo "password = '${SNOWFLAKE_PASSWORD}'" >> connections.toml
          echo "role = '${SNOWFLAKE_ROLE}'" >> connections.toml
          echo "warehouse = '${SNOWFLAKE_WAREHOUSE}'" >> connections.toml
          echo "database = '${SNOWFLAKE_DATABASE}'" >> connections.toml
          echo "schema = '${SNOWFLAKE_SCHEMA}'" >> connections.toml

      - name: Debug connections.toml contents (optional)
        run: |
          cat connections.toml

      - name: Deploy changes to STAGE_DB using schemachange
        run: |
          schemachange -f sql/ -c snowflake_connection --create-change-history-table
