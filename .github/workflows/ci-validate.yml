name: Snowflake CI Pipeline (STAGE - Auto Deploy + PR)

on:
  push:
    branches:
      - stage

jobs:
  deploy-to-stage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install schemachange
          pip install sqlfluff

      - name: Add SQLFluff config
        run: |
          echo "[sqlfluff]" > .sqlfluff
          echo "dialect = snowflake" >> .sqlfluff
          echo "exclude_rules = L010,L014,LT02" >> .sqlfluff

      - name: Lint SQL files
        run: |
          sqlfluff lint sql/

      - name: Create connections.toml
        run: |
          cat <<EOF > connections.toml
          [snowflake_connection]
          account = "${{ secrets.SNOWFLAKE_ACCOUNT }}"
          user = "${{ secrets.SNOWFLAKE_USER }}"
          password = "${{ secrets.SNOWFLAKE_PASSWORD }}"
          role = "${{ secrets.SNOWFLAKE_ROLE }}"
          warehouse = "${{ secrets.SNOWFLAKE_WAREHOUSE }}"
          database = "${{ secrets.SNOWFLAKE_DATABASE_STAGE }}"
          schema = "${{ secrets.SNOWFLAKE_SCHEMA }}"
          EOF

      - name: Debug connections.toml
        run: |
          echo "====== Printing connections.toml ======"
          cat connections.toml

      - name: Verify Secrets Before Deployment
        run: |
          check_secret() {
              if [ -z "$1" ]; then
                  echo "‚ùå $2 is MISSING or EMPTY"
                  exit 1
              else
                  echo "‚úÖ $2 is OK"
              fi
          }

          echo "üîç Checking GitHub Secrets..."
          check_secret "${{ secrets.SNOWFLAKE_ACCOUNT }}" "SNOWFLAKE_ACCOUNT"
          check_secret "${{ secrets.SNOWFLAKE_USER }}" "SNOWFLAKE_USER"
          check_secret "${{ secrets.SNOWFLAKE_PASSWORD }}" "SNOWFLAKE_PASSWORD"
          check_secret "${{ secrets.SNOWFLAKE_ROLE }}" "SNOWFLAKE_ROLE"
          check_secret "${{ secrets.SNOWFLAKE_WAREHOUSE }}" "SNOWFLAKE_WAREHOUSE"
          check_secret "${{ secrets.SNOWFLAKE_DATABASE_STAGE }}" "SNOWFLAKE_DATABASE_STAGE"
          check_secret "${{ secrets.SNOWFLAKE_SCHEMA }}" "SNOWFLAKE_SCHEMA"

          echo "‚úÖ All secrets are correctly populated. Proceeding with deployment!"

      - name: Deploy to STAGE_DB using schemachange
        env:
          SNOWFLAKE_CONNECTIONS: ./connections.toml
        run: |
          schemachange -f sql/ --create-change-history-table
